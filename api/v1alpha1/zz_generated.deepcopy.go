//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/resource"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/types"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityApplyConfiguration) DeepCopyInto(out *AffinityApplyConfiguration) {
	*out = *in
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(NodeAffinityApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAffinity != nil {
		in, out := &in.PodAffinity, &out.PodAffinity
		*out = new(PodAffinityApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAntiAffinity != nil {
		in, out := &in.PodAntiAffinity, &out.PodAntiAffinity
		*out = new(PodAntiAffinityApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityApplyConfiguration.
func (in *AffinityApplyConfiguration) DeepCopy() *AffinityApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(AffinityApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedVolumeApplyConfiguration) DeepCopyInto(out *AttachedVolumeApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DevicePath != nil {
		in, out := &in.DevicePath, &out.DevicePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedVolumeApplyConfiguration.
func (in *AttachedVolumeApplyConfiguration) DeepCopy() *AttachedVolumeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(AttachedVolumeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CSIPersistentVolumeSourceApplyConfiguration) DeepCopyInto(out *CSIPersistentVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.VolumeHandle != nil {
		in, out := &in.VolumeHandle, &out.VolumeHandle
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.VolumeAttributes != nil {
		in, out := &in.VolumeAttributes, &out.VolumeAttributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ControllerPublishSecretRef != nil {
		in, out := &in.ControllerPublishSecretRef, &out.ControllerPublishSecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeStageSecretRef != nil {
		in, out := &in.NodeStageSecretRef, &out.NodeStageSecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NodePublishSecretRef != nil {
		in, out := &in.NodePublishSecretRef, &out.NodePublishSecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ControllerExpandSecretRef != nil {
		in, out := &in.ControllerExpandSecretRef, &out.ControllerExpandSecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeExpandSecretRef != nil {
		in, out := &in.NodeExpandSecretRef, &out.NodeExpandSecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CSIPersistentVolumeSourceApplyConfiguration.
func (in *CSIPersistentVolumeSourceApplyConfiguration) DeepCopy() *CSIPersistentVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(CSIPersistentVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CSIVolumeSourceApplyConfiguration) DeepCopyInto(out *CSIVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.VolumeAttributes != nil {
		in, out := &in.VolumeAttributes, &out.VolumeAttributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublishSecretRef != nil {
		in, out := &in.NodePublishSecretRef, &out.NodePublishSecretRef
		*out = new(LocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CSIVolumeSourceApplyConfiguration.
func (in *CSIVolumeSourceApplyConfiguration) DeepCopy() *CSIVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(CSIVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapabilitiesApplyConfiguration) DeepCopyInto(out *CapabilitiesApplyConfiguration) {
	*out = *in
	if in.Add != nil {
		in, out := &in.Add, &out.Add
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Drop != nil {
		in, out := &in.Drop, &out.Drop
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapabilitiesApplyConfiguration.
func (in *CapabilitiesApplyConfiguration) DeepCopy() *CapabilitiesApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(CapabilitiesApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClaimSourceApplyConfiguration) DeepCopyInto(out *ClaimSourceApplyConfiguration) {
	*out = *in
	if in.ResourceClaimName != nil {
		in, out := &in.ResourceClaimName, &out.ResourceClaimName
		*out = new(string)
		**out = **in
	}
	if in.ResourceClaimTemplateName != nil {
		in, out := &in.ResourceClaimTemplateName, &out.ResourceClaimTemplateName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClaimSourceApplyConfiguration.
func (in *ClaimSourceApplyConfiguration) DeepCopy() *ClaimSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ClaimSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPConfigApplyConfiguration) DeepCopyInto(out *ClientIPConfigApplyConfiguration) {
	*out = *in
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPConfigApplyConfiguration.
func (in *ClientIPConfigApplyConfiguration) DeepCopy() *ClientIPConfigApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ClientIPConfigApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapApplyConfiguration) DeepCopyInto(out *ConfigMapApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BinaryData != nil {
		in, out := &in.BinaryData, &out.BinaryData
		*out = make(map[string][]byte, len(*in))
		for key, val := range *in {
			var outVal []byte
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]byte, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapApplyConfiguration.
func (in *ConfigMapApplyConfiguration) DeepCopy() *ConfigMapApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigMapApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapEnvSourceApplyConfiguration) DeepCopyInto(out *ConfigMapEnvSourceApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapEnvSourceApplyConfiguration.
func (in *ConfigMapEnvSourceApplyConfiguration) DeepCopy() *ConfigMapEnvSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigMapEnvSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapKeySelectorApplyConfiguration) DeepCopyInto(out *ConfigMapKeySelectorApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapKeySelectorApplyConfiguration.
func (in *ConfigMapKeySelectorApplyConfiguration) DeepCopy() *ConfigMapKeySelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigMapKeySelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapNodeConfigSourceApplyConfiguration) DeepCopyInto(out *ConfigMapNodeConfigSourceApplyConfiguration) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(types.UID)
		**out = **in
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.KubeletConfigKey != nil {
		in, out := &in.KubeletConfigKey, &out.KubeletConfigKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapNodeConfigSourceApplyConfiguration.
func (in *ConfigMapNodeConfigSourceApplyConfiguration) DeepCopy() *ConfigMapNodeConfigSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigMapNodeConfigSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapProjectionApplyConfiguration) DeepCopyInto(out *ConfigMapProjectionApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeyToPathApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapProjectionApplyConfiguration.
func (in *ConfigMapProjectionApplyConfiguration) DeepCopy() *ConfigMapProjectionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigMapProjectionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapVolumeSourceApplyConfiguration) DeepCopyInto(out *ConfigMapVolumeSourceApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeyToPathApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultMode != nil {
		in, out := &in.DefaultMode, &out.DefaultMode
		*out = new(int32)
		**out = **in
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapVolumeSourceApplyConfiguration.
func (in *ConfigMapVolumeSourceApplyConfiguration) DeepCopy() *ConfigMapVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigMapVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerApplyConfiguration) DeepCopyInto(out *ContainerApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WorkingDir != nil {
		in, out := &in.WorkingDir, &out.WorkingDir
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]ContainerPortApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvFrom != nil {
		in, out := &in.EnvFrom, &out.EnvFrom
		*out = make([]EnvFromSourceApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]EnvVarApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ResourceRequirementsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ResizePolicy != nil {
		in, out := &in.ResizePolicy, &out.ResizePolicy
		*out = make([]ContainerResizePolicyApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]VolumeMountApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeDevices != nil {
		in, out := &in.VolumeDevices, &out.VolumeDevices
		*out = make([]VolumeDeviceApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(ProbeApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(ProbeApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.StartupProbe != nil {
		in, out := &in.StartupProbe, &out.StartupProbe
		*out = new(ProbeApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(LifecycleApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.TerminationMessagePath != nil {
		in, out := &in.TerminationMessagePath, &out.TerminationMessagePath
		*out = new(string)
		**out = **in
	}
	if in.TerminationMessagePolicy != nil {
		in, out := &in.TerminationMessagePolicy, &out.TerminationMessagePolicy
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(SecurityContextApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Stdin != nil {
		in, out := &in.Stdin, &out.Stdin
		*out = new(bool)
		**out = **in
	}
	if in.StdinOnce != nil {
		in, out := &in.StdinOnce, &out.StdinOnce
		*out = new(bool)
		**out = **in
	}
	if in.TTY != nil {
		in, out := &in.TTY, &out.TTY
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerApplyConfiguration.
func (in *ContainerApplyConfiguration) DeepCopy() *ContainerApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerImageApplyConfiguration) DeepCopyInto(out *ContainerImageApplyConfiguration) {
	*out = *in
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SizeBytes != nil {
		in, out := &in.SizeBytes, &out.SizeBytes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerImageApplyConfiguration.
func (in *ContainerImageApplyConfiguration) DeepCopy() *ContainerImageApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerImageApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerPortApplyConfiguration) DeepCopyInto(out *ContainerPortApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.HostPort != nil {
		in, out := &in.HostPort, &out.HostPort
		*out = new(int32)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int32)
		**out = **in
	}
	if in.HostIP != nil {
		in, out := &in.HostIP, &out.HostIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerPortApplyConfiguration.
func (in *ContainerPortApplyConfiguration) DeepCopy() *ContainerPortApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerPortApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerResizePolicyApplyConfiguration) DeepCopyInto(out *ContainerResizePolicyApplyConfiguration) {
	*out = *in
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerResizePolicyApplyConfiguration.
func (in *ContainerResizePolicyApplyConfiguration) DeepCopy() *ContainerResizePolicyApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerResizePolicyApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStateApplyConfiguration) DeepCopyInto(out *ContainerStateApplyConfiguration) {
	*out = *in
	if in.Waiting != nil {
		in, out := &in.Waiting, &out.Waiting
		*out = new(ContainerStateWaitingApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Running != nil {
		in, out := &in.Running, &out.Running
		*out = new(ContainerStateRunningApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Terminated != nil {
		in, out := &in.Terminated, &out.Terminated
		*out = new(ContainerStateTerminatedApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStateApplyConfiguration.
func (in *ContainerStateApplyConfiguration) DeepCopy() *ContainerStateApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerStateApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStateRunningApplyConfiguration) DeepCopyInto(out *ContainerStateRunningApplyConfiguration) {
	*out = *in
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStateRunningApplyConfiguration.
func (in *ContainerStateRunningApplyConfiguration) DeepCopy() *ContainerStateRunningApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerStateRunningApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStateTerminatedApplyConfiguration) DeepCopyInto(out *ContainerStateTerminatedApplyConfiguration) {
	*out = *in
	if in.ExitCode != nil {
		in, out := &in.ExitCode, &out.ExitCode
		*out = new(int32)
		**out = **in
	}
	if in.Signal != nil {
		in, out := &in.Signal, &out.Signal
		*out = new(int32)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
	if in.FinishedAt != nil {
		in, out := &in.FinishedAt, &out.FinishedAt
		*out = (*in).DeepCopy()
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStateTerminatedApplyConfiguration.
func (in *ContainerStateTerminatedApplyConfiguration) DeepCopy() *ContainerStateTerminatedApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerStateTerminatedApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStateWaitingApplyConfiguration) DeepCopyInto(out *ContainerStateWaitingApplyConfiguration) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStateWaitingApplyConfiguration.
func (in *ContainerStateWaitingApplyConfiguration) DeepCopy() *ContainerStateWaitingApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerStateWaitingApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStatusApplyConfiguration) DeepCopyInto(out *ContainerStatusApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ContainerStateApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.LastTerminationState != nil {
		in, out := &in.LastTerminationState, &out.LastTerminationState
		*out = new(ContainerStateApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.RestartCount != nil {
		in, out := &in.RestartCount, &out.RestartCount
		*out = new(int32)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.Started != nil {
		in, out := &in.Started, &out.Started
		*out = new(bool)
		**out = **in
	}
	if in.AllocatedResources != nil {
		in, out := &in.AllocatedResources, &out.AllocatedResources
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ResourceRequirementsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStatusApplyConfiguration.
func (in *ContainerStatusApplyConfiguration) DeepCopy() *ContainerStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ContainerStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownwardAPIProjectionApplyConfiguration) DeepCopyInto(out *DownwardAPIProjectionApplyConfiguration) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DownwardAPIVolumeFileApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownwardAPIProjectionApplyConfiguration.
func (in *DownwardAPIProjectionApplyConfiguration) DeepCopy() *DownwardAPIProjectionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(DownwardAPIProjectionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownwardAPIVolumeFileApplyConfiguration) DeepCopyInto(out *DownwardAPIVolumeFileApplyConfiguration) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.FieldRef != nil {
		in, out := &in.FieldRef, &out.FieldRef
		*out = new(ObjectFieldSelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceFieldRef != nil {
		in, out := &in.ResourceFieldRef, &out.ResourceFieldRef
		*out = new(ResourceFieldSelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownwardAPIVolumeFileApplyConfiguration.
func (in *DownwardAPIVolumeFileApplyConfiguration) DeepCopy() *DownwardAPIVolumeFileApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(DownwardAPIVolumeFileApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownwardAPIVolumeSourceApplyConfiguration) DeepCopyInto(out *DownwardAPIVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DownwardAPIVolumeFileApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultMode != nil {
		in, out := &in.DefaultMode, &out.DefaultMode
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownwardAPIVolumeSourceApplyConfiguration.
func (in *DownwardAPIVolumeSourceApplyConfiguration) DeepCopy() *DownwardAPIVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(DownwardAPIVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstEventInterface) DeepCopyInto(out *DstEventInterface) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstEventInterface.
func (in *DstEventInterface) DeepCopy() *DstEventInterface {
	if in == nil {
		return nil
	}
	out := new(DstEventInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyDirVolumeSourceApplyConfiguration) DeepCopyInto(out *EmptyDirVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Medium != nil {
		in, out := &in.Medium, &out.Medium
		*out = new(string)
		**out = **in
	}
	if in.SizeLimit != nil {
		in, out := &in.SizeLimit, &out.SizeLimit
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyDirVolumeSourceApplyConfiguration.
func (in *EmptyDirVolumeSourceApplyConfiguration) DeepCopy() *EmptyDirVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EmptyDirVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointAddressApplyConfiguration) DeepCopyInto(out *EndpointAddressApplyConfiguration) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(ObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointAddressApplyConfiguration.
func (in *EndpointAddressApplyConfiguration) DeepCopy() *EndpointAddressApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EndpointAddressApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointPortApplyConfiguration) DeepCopyInto(out *EndpointPortApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.AppProtocol != nil {
		in, out := &in.AppProtocol, &out.AppProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointPortApplyConfiguration.
func (in *EndpointPortApplyConfiguration) DeepCopy() *EndpointPortApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EndpointPortApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSubsetApplyConfiguration) DeepCopyInto(out *EndpointSubsetApplyConfiguration) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]EndpointAddressApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotReadyAddresses != nil {
		in, out := &in.NotReadyAddresses, &out.NotReadyAddresses
		*out = make([]EndpointAddressApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]EndpointPortApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSubsetApplyConfiguration.
func (in *EndpointSubsetApplyConfiguration) DeepCopy() *EndpointSubsetApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EndpointSubsetApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsApplyConfiguration) DeepCopyInto(out *EndpointsApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Subsets != nil {
		in, out := &in.Subsets, &out.Subsets
		*out = make([]EndpointSubsetApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsApplyConfiguration.
func (in *EndpointsApplyConfiguration) DeepCopy() *EndpointsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EndpointsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvFromSourceApplyConfiguration) DeepCopyInto(out *EnvFromSourceApplyConfiguration) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ConfigMapRef != nil {
		in, out := &in.ConfigMapRef, &out.ConfigMapRef
		*out = new(ConfigMapEnvSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(SecretEnvSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvFromSourceApplyConfiguration.
func (in *EnvFromSourceApplyConfiguration) DeepCopy() *EnvFromSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EnvFromSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvVarApplyConfiguration) DeepCopyInto(out *EnvVarApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(EnvVarSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvVarApplyConfiguration.
func (in *EnvVarApplyConfiguration) DeepCopy() *EnvVarApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EnvVarApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvVarSourceApplyConfiguration) DeepCopyInto(out *EnvVarSourceApplyConfiguration) {
	*out = *in
	if in.FieldRef != nil {
		in, out := &in.FieldRef, &out.FieldRef
		*out = new(ObjectFieldSelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceFieldRef != nil {
		in, out := &in.ResourceFieldRef, &out.ResourceFieldRef
		*out = new(ResourceFieldSelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(ConfigMapKeySelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(SecretKeySelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvVarSourceApplyConfiguration.
func (in *EnvVarSourceApplyConfiguration) DeepCopy() *EnvVarSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EnvVarSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralVolumeSourceApplyConfiguration) DeepCopyInto(out *EphemeralVolumeSourceApplyConfiguration) {
	*out = *in
	if in.VolumeClaimTemplate != nil {
		in, out := &in.VolumeClaimTemplate, &out.VolumeClaimTemplate
		*out = new(PersistentVolumeClaimTemplateApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralVolumeSourceApplyConfiguration.
func (in *EphemeralVolumeSourceApplyConfiguration) DeepCopy() *EphemeralVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EphemeralVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventApplyConfiguration) DeepCopyInto(out *EventApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.InvolvedObject != nil {
		in, out := &in.InvolvedObject, &out.InvolvedObject
		*out = new(ObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(EventSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FirstTimestamp != nil {
		in, out := &in.FirstTimestamp, &out.FirstTimestamp
		*out = (*in).DeepCopy()
	}
	if in.LastTimestamp != nil {
		in, out := &in.LastTimestamp, &out.LastTimestamp
		*out = (*in).DeepCopy()
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.EventTime != nil {
		in, out := &in.EventTime, &out.EventTime
		*out = (*in).DeepCopy()
	}
	if in.Series != nil {
		in, out := &in.Series, &out.Series
		*out = new(EventSeriesApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Related != nil {
		in, out := &in.Related, &out.Related
		*out = new(ObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReportingController != nil {
		in, out := &in.ReportingController, &out.ReportingController
		*out = new(string)
		**out = **in
	}
	if in.ReportingInstance != nil {
		in, out := &in.ReportingInstance, &out.ReportingInstance
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventApplyConfiguration.
func (in *EventApplyConfiguration) DeepCopy() *EventApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EventApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSeriesApplyConfiguration) DeepCopyInto(out *EventSeriesApplyConfiguration) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	if in.LastObservedTime != nil {
		in, out := &in.LastObservedTime, &out.LastObservedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSeriesApplyConfiguration.
func (in *EventSeriesApplyConfiguration) DeepCopy() *EventSeriesApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EventSeriesApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceApplyConfiguration) DeepCopyInto(out *EventSourceApplyConfiguration) {
	*out = *in
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceApplyConfiguration.
func (in *EventSourceApplyConfiguration) DeepCopy() *EventSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EventSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecActionApplyConfiguration) DeepCopyInto(out *ExecActionApplyConfiguration) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecActionApplyConfiguration.
func (in *ExecActionApplyConfiguration) DeepCopy() *ExecActionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExecActionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FCVolumeSourceApplyConfiguration) DeepCopyInto(out *FCVolumeSourceApplyConfiguration) {
	*out = *in
	if in.TargetWWNs != nil {
		in, out := &in.TargetWWNs, &out.TargetWWNs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Lun != nil {
		in, out := &in.Lun, &out.Lun
		*out = new(int32)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.WWIDs != nil {
		in, out := &in.WWIDs, &out.WWIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FCVolumeSourceApplyConfiguration.
func (in *FCVolumeSourceApplyConfiguration) DeepCopy() *FCVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(FCVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexPersistentVolumeSourceApplyConfiguration) DeepCopyInto(out *FlexPersistentVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexPersistentVolumeSourceApplyConfiguration.
func (in *FlexPersistentVolumeSourceApplyConfiguration) DeepCopy() *FlexPersistentVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(FlexPersistentVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexVolumeSourceApplyConfiguration) DeepCopyInto(out *FlexVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexVolumeSourceApplyConfiguration.
func (in *FlexVolumeSourceApplyConfiguration) DeepCopy() *FlexVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(FlexVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlockerVolumeSourceApplyConfiguration) DeepCopyInto(out *FlockerVolumeSourceApplyConfiguration) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.DatasetUUID != nil {
		in, out := &in.DatasetUUID, &out.DatasetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlockerVolumeSourceApplyConfiguration.
func (in *FlockerVolumeSourceApplyConfiguration) DeepCopy() *FlockerVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(FlockerVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCActionApplyConfiguration) DeepCopyInto(out *GRPCActionApplyConfiguration) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCActionApplyConfiguration.
func (in *GRPCActionApplyConfiguration) DeepCopy() *GRPCActionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(GRPCActionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoVolumeSourceApplyConfiguration) DeepCopyInto(out *GitRepoVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoVolumeSourceApplyConfiguration.
func (in *GitRepoVolumeSourceApplyConfiguration) DeepCopy() *GitRepoVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(GitRepoVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlusterfsVolumeSourceApplyConfiguration) DeepCopyInto(out *GlusterfsVolumeSourceApplyConfiguration) {
	*out = *in
	if in.EndpointsName != nil {
		in, out := &in.EndpointsName, &out.EndpointsName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlusterfsVolumeSourceApplyConfiguration.
func (in *GlusterfsVolumeSourceApplyConfiguration) DeepCopy() *GlusterfsVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(GlusterfsVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPGetActionApplyConfiguration) DeepCopyInto(out *HTTPGetActionApplyConfiguration) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make([]HTTPHeaderApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPGetActionApplyConfiguration.
func (in *HTTPGetActionApplyConfiguration) DeepCopy() *HTTPGetActionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(HTTPGetActionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderApplyConfiguration) DeepCopyInto(out *HTTPHeaderApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderApplyConfiguration.
func (in *HTTPHeaderApplyConfiguration) DeepCopy() *HTTPHeaderApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostAliasApplyConfiguration) DeepCopyInto(out *HostAliasApplyConfiguration) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Hostnames != nil {
		in, out := &in.Hostnames, &out.Hostnames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostAliasApplyConfiguration.
func (in *HostAliasApplyConfiguration) DeepCopy() *HostAliasApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(HostAliasApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPathVolumeSourceApplyConfiguration) DeepCopyInto(out *HostPathVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPathVolumeSourceApplyConfiguration.
func (in *HostPathVolumeSourceApplyConfiguration) DeepCopy() *HostPathVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(HostPathVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ISCSIPersistentVolumeSourceApplyConfiguration) DeepCopyInto(out *ISCSIPersistentVolumeSourceApplyConfiguration) {
	*out = *in
	if in.TargetPortal != nil {
		in, out := &in.TargetPortal, &out.TargetPortal
		*out = new(string)
		**out = **in
	}
	if in.IQN != nil {
		in, out := &in.IQN, &out.IQN
		*out = new(string)
		**out = **in
	}
	if in.Lun != nil {
		in, out := &in.Lun, &out.Lun
		*out = new(int32)
		**out = **in
	}
	if in.ISCSIInterface != nil {
		in, out := &in.ISCSIInterface, &out.ISCSIInterface
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Portals != nil {
		in, out := &in.Portals, &out.Portals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DiscoveryCHAPAuth != nil {
		in, out := &in.DiscoveryCHAPAuth, &out.DiscoveryCHAPAuth
		*out = new(bool)
		**out = **in
	}
	if in.SessionCHAPAuth != nil {
		in, out := &in.SessionCHAPAuth, &out.SessionCHAPAuth
		*out = new(bool)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.InitiatorName != nil {
		in, out := &in.InitiatorName, &out.InitiatorName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ISCSIPersistentVolumeSourceApplyConfiguration.
func (in *ISCSIPersistentVolumeSourceApplyConfiguration) DeepCopy() *ISCSIPersistentVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ISCSIPersistentVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ISCSIVolumeSourceApplyConfiguration) DeepCopyInto(out *ISCSIVolumeSourceApplyConfiguration) {
	*out = *in
	if in.TargetPortal != nil {
		in, out := &in.TargetPortal, &out.TargetPortal
		*out = new(string)
		**out = **in
	}
	if in.IQN != nil {
		in, out := &in.IQN, &out.IQN
		*out = new(string)
		**out = **in
	}
	if in.Lun != nil {
		in, out := &in.Lun, &out.Lun
		*out = new(int32)
		**out = **in
	}
	if in.ISCSIInterface != nil {
		in, out := &in.ISCSIInterface, &out.ISCSIInterface
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Portals != nil {
		in, out := &in.Portals, &out.Portals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DiscoveryCHAPAuth != nil {
		in, out := &in.DiscoveryCHAPAuth, &out.DiscoveryCHAPAuth
		*out = new(bool)
		**out = **in
	}
	if in.SessionCHAPAuth != nil {
		in, out := &in.SessionCHAPAuth, &out.SessionCHAPAuth
		*out = new(bool)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.InitiatorName != nil {
		in, out := &in.InitiatorName, &out.InitiatorName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ISCSIVolumeSourceApplyConfiguration.
func (in *ISCSIVolumeSourceApplyConfiguration) DeepCopy() *ISCSIVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ISCSIVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyToPathApplyConfiguration) DeepCopyInto(out *KeyToPathApplyConfiguration) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyToPathApplyConfiguration.
func (in *KeyToPathApplyConfiguration) DeepCopy() *KeyToPathApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(KeyToPathApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelSelectorApplyConfiguration) DeepCopyInto(out *LabelSelectorApplyConfiguration) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]LabelSelectorRequirementApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelSelectorApplyConfiguration.
func (in *LabelSelectorApplyConfiguration) DeepCopy() *LabelSelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LabelSelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelSelectorRequirementApplyConfiguration) DeepCopyInto(out *LabelSelectorRequirementApplyConfiguration) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelSelectorRequirementApplyConfiguration.
func (in *LabelSelectorRequirementApplyConfiguration) DeepCopy() *LabelSelectorRequirementApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LabelSelectorRequirementApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleApplyConfiguration) DeepCopyInto(out *LifecycleApplyConfiguration) {
	*out = *in
	if in.PostStart != nil {
		in, out := &in.PostStart, &out.PostStart
		*out = new(LifecycleHandlerApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PreStop != nil {
		in, out := &in.PreStop, &out.PreStop
		*out = new(LifecycleHandlerApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleApplyConfiguration.
func (in *LifecycleApplyConfiguration) DeepCopy() *LifecycleApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LifecycleApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleHandlerApplyConfiguration) DeepCopyInto(out *LifecycleHandlerApplyConfiguration) {
	*out = *in
	if in.Exec != nil {
		in, out := &in.Exec, &out.Exec
		*out = new(ExecActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPGet != nil {
		in, out := &in.HTTPGet, &out.HTTPGet
		*out = new(HTTPGetActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.TCPSocket != nil {
		in, out := &in.TCPSocket, &out.TCPSocket
		*out = new(TCPSocketActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleHandlerApplyConfiguration.
func (in *LifecycleHandlerApplyConfiguration) DeepCopy() *LifecycleHandlerApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LifecycleHandlerApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerIngressApplyConfiguration) DeepCopyInto(out *LoadBalancerIngressApplyConfiguration) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]PortStatusApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerIngressApplyConfiguration.
func (in *LoadBalancerIngressApplyConfiguration) DeepCopy() *LoadBalancerIngressApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerIngressApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerStatusApplyConfiguration) DeepCopyInto(out *LoadBalancerStatusApplyConfiguration) {
	*out = *in
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]LoadBalancerIngressApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerStatusApplyConfiguration.
func (in *LoadBalancerStatusApplyConfiguration) DeepCopy() *LoadBalancerStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalObjectReferenceApplyConfiguration) DeepCopyInto(out *LocalObjectReferenceApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalObjectReferenceApplyConfiguration.
func (in *LocalObjectReferenceApplyConfiguration) DeepCopy() *LocalObjectReferenceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LocalObjectReferenceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalVolumeSourceApplyConfiguration) DeepCopyInto(out *LocalVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalVolumeSourceApplyConfiguration.
func (in *LocalVolumeSourceApplyConfiguration) DeepCopy() *LocalVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(LocalVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NFSVolumeSourceApplyConfiguration) DeepCopyInto(out *NFSVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NFSVolumeSourceApplyConfiguration.
func (in *NFSVolumeSourceApplyConfiguration) DeepCopy() *NFSVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NFSVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinityApplyConfiguration) DeepCopyInto(out *NodeAffinityApplyConfiguration) {
	*out = *in
	in.RequiredDuringSchedulingIgnoredDuringExecution.DeepCopyInto(&out.RequiredDuringSchedulingIgnoredDuringExecution)
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]PreferredSchedulingTermApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinityApplyConfiguration.
func (in *NodeAffinityApplyConfiguration) DeepCopy() *NodeAffinityApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeAffinityApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigSourceApplyConfiguration) DeepCopyInto(out *NodeConfigSourceApplyConfiguration) {
	*out = *in
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(ConfigMapNodeConfigSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigSourceApplyConfiguration.
func (in *NodeConfigSourceApplyConfiguration) DeepCopy() *NodeConfigSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeConfigSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigStatusApplyConfiguration) DeepCopyInto(out *NodeConfigStatusApplyConfiguration) {
	*out = *in
	if in.Assigned != nil {
		in, out := &in.Assigned, &out.Assigned
		*out = new(NodeConfigSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(NodeConfigSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.LastKnownGood != nil {
		in, out := &in.LastKnownGood, &out.LastKnownGood
		*out = new(NodeConfigSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigStatusApplyConfiguration.
func (in *NodeConfigStatusApplyConfiguration) DeepCopy() *NodeConfigStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeConfigStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorApplyConfiguration) DeepCopyInto(out *NodeSelectorApplyConfiguration) {
	*out = *in
	if in.NodeSelectorTerms != nil {
		in, out := &in.NodeSelectorTerms, &out.NodeSelectorTerms
		*out = make([]NodeSelectorTermApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorApplyConfiguration.
func (in *NodeSelectorApplyConfiguration) DeepCopy() *NodeSelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorRequirementApplyConfiguration) DeepCopyInto(out *NodeSelectorRequirementApplyConfiguration) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorRequirementApplyConfiguration.
func (in *NodeSelectorRequirementApplyConfiguration) DeepCopy() *NodeSelectorRequirementApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorRequirementApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorTermApplyConfiguration) DeepCopyInto(out *NodeSelectorTermApplyConfiguration) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]NodeSelectorRequirementApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchFields != nil {
		in, out := &in.MatchFields, &out.MatchFields
		*out = make([]NodeSelectorRequirementApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorTermApplyConfiguration.
func (in *NodeSelectorTermApplyConfiguration) DeepCopy() *NodeSelectorTermApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorTermApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSystemInfoApplyConfiguration) DeepCopyInto(out *NodeSystemInfoApplyConfiguration) {
	*out = *in
	if in.MachineID != nil {
		in, out := &in.MachineID, &out.MachineID
		*out = new(string)
		**out = **in
	}
	if in.SystemUUID != nil {
		in, out := &in.SystemUUID, &out.SystemUUID
		*out = new(string)
		**out = **in
	}
	if in.BootID != nil {
		in, out := &in.BootID, &out.BootID
		*out = new(string)
		**out = **in
	}
	if in.KernelVersion != nil {
		in, out := &in.KernelVersion, &out.KernelVersion
		*out = new(string)
		**out = **in
	}
	if in.OSImage != nil {
		in, out := &in.OSImage, &out.OSImage
		*out = new(string)
		**out = **in
	}
	if in.ContainerRuntimeVersion != nil {
		in, out := &in.ContainerRuntimeVersion, &out.ContainerRuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.KubeletVersion != nil {
		in, out := &in.KubeletVersion, &out.KubeletVersion
		*out = new(string)
		**out = **in
	}
	if in.KubeProxyVersion != nil {
		in, out := &in.KubeProxyVersion, &out.KubeProxyVersion
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSystemInfoApplyConfiguration.
func (in *NodeSystemInfoApplyConfiguration) DeepCopy() *NodeSystemInfoApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeSystemInfoApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectFieldSelectorApplyConfiguration) DeepCopyInto(out *ObjectFieldSelectorApplyConfiguration) {
	*out = *in
	if in.APIVersion != nil {
		in, out := &in.APIVersion, &out.APIVersion
		*out = new(string)
		**out = **in
	}
	if in.FieldPath != nil {
		in, out := &in.FieldPath, &out.FieldPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectFieldSelectorApplyConfiguration.
func (in *ObjectFieldSelectorApplyConfiguration) DeepCopy() *ObjectFieldSelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ObjectFieldSelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReferenceApplyConfiguration) DeepCopyInto(out *ObjectReferenceApplyConfiguration) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(types.UID)
		**out = **in
	}
	if in.APIVersion != nil {
		in, out := &in.APIVersion, &out.APIVersion
		*out = new(string)
		**out = **in
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.FieldPath != nil {
		in, out := &in.FieldPath, &out.FieldPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReferenceApplyConfiguration.
func (in *ObjectReferenceApplyConfiguration) DeepCopy() *ObjectReferenceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ObjectReferenceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeApplyConfiguration) DeepCopyInto(out *PersistentVolumeApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(PersistentVolumeSpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(PersistentVolumeStatusApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeApplyConfiguration.
func (in *PersistentVolumeApplyConfiguration) DeepCopy() *PersistentVolumeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeClaimConditionApplyConfiguration) DeepCopyInto(out *PersistentVolumeClaimConditionApplyConfiguration) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.LastProbeTime != nil {
		in, out := &in.LastProbeTime, &out.LastProbeTime
		*out = (*in).DeepCopy()
	}
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeClaimConditionApplyConfiguration.
func (in *PersistentVolumeClaimConditionApplyConfiguration) DeepCopy() *PersistentVolumeClaimConditionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeClaimConditionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeClaimSpecApplyConfiguration) DeepCopyInto(out *PersistentVolumeClaimSpecApplyConfiguration) {
	*out = *in
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ResourceRequirementsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeName != nil {
		in, out := &in.VolumeName, &out.VolumeName
		*out = new(string)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.VolumeMode != nil {
		in, out := &in.VolumeMode, &out.VolumeMode
		*out = new(string)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(TypedLocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DataSourceRef != nil {
		in, out := &in.DataSourceRef, &out.DataSourceRef
		*out = new(TypedObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeClaimSpecApplyConfiguration.
func (in *PersistentVolumeClaimSpecApplyConfiguration) DeepCopy() *PersistentVolumeClaimSpecApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeClaimSpecApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeClaimTemplateApplyConfiguration) DeepCopyInto(out *PersistentVolumeClaimTemplateApplyConfiguration) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(PersistentVolumeClaimSpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeClaimTemplateApplyConfiguration.
func (in *PersistentVolumeClaimTemplateApplyConfiguration) DeepCopy() *PersistentVolumeClaimTemplateApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeClaimTemplateApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeClaimVolumeSourceApplyConfiguration) DeepCopyInto(out *PersistentVolumeClaimVolumeSourceApplyConfiguration) {
	*out = *in
	if in.ClaimName != nil {
		in, out := &in.ClaimName, &out.ClaimName
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeClaimVolumeSourceApplyConfiguration.
func (in *PersistentVolumeClaimVolumeSourceApplyConfiguration) DeepCopy() *PersistentVolumeClaimVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeClaimVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeSourceApplyConfiguration) DeepCopyInto(out *PersistentVolumeSourceApplyConfiguration) {
	*out = *in
	if in.HostPath != nil {
		in, out := &in.HostPath, &out.HostPath
		*out = new(HostPathVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NFS != nil {
		in, out := &in.NFS, &out.NFS
		*out = new(NFSVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RBD != nil {
		in, out := &in.RBD, &out.RBD
		*out = new(RBDPersistentVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ISCSI != nil {
		in, out := &in.ISCSI, &out.ISCSI
		*out = new(ISCSIPersistentVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Local != nil {
		in, out := &in.Local, &out.Local
		*out = new(LocalVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageOS != nil {
		in, out := &in.StorageOS, &out.StorageOS
		*out = new(StorageOSPersistentVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.CSI != nil {
		in, out := &in.CSI, &out.CSI
		*out = new(CSIPersistentVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeSourceApplyConfiguration.
func (in *PersistentVolumeSourceApplyConfiguration) DeepCopy() *PersistentVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeSpecApplyConfiguration) DeepCopyInto(out *PersistentVolumeSpecApplyConfiguration) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
	in.PersistentVolumeSourceApplyConfiguration.DeepCopyInto(&out.PersistentVolumeSourceApplyConfiguration)
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClaimRef != nil {
		in, out := &in.ClaimRef, &out.ClaimRef
		*out = new(ObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeReclaimPolicy != nil {
		in, out := &in.PersistentVolumeReclaimPolicy, &out.PersistentVolumeReclaimPolicy
		*out = new(string)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VolumeMode != nil {
		in, out := &in.VolumeMode, &out.VolumeMode
		*out = new(string)
		**out = **in
	}
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(VolumeNodeAffinityApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeSpecApplyConfiguration.
func (in *PersistentVolumeSpecApplyConfiguration) DeepCopy() *PersistentVolumeSpecApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeSpecApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentVolumeStatusApplyConfiguration) DeepCopyInto(out *PersistentVolumeStatusApplyConfiguration) {
	*out = *in
	if in.Phase != nil {
		in, out := &in.Phase, &out.Phase
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentVolumeStatusApplyConfiguration.
func (in *PersistentVolumeStatusApplyConfiguration) DeepCopy() *PersistentVolumeStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PersistentVolumeStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodAffinityApplyConfiguration) DeepCopyInto(out *PodAffinityApplyConfiguration) {
	*out = *in
	if in.RequiredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.RequiredDuringSchedulingIgnoredDuringExecution, &out.RequiredDuringSchedulingIgnoredDuringExecution
		*out = make([]PodAffinityTermApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]WeightedPodAffinityTermApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodAffinityApplyConfiguration.
func (in *PodAffinityApplyConfiguration) DeepCopy() *PodAffinityApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodAffinityApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodAffinityTermApplyConfiguration) DeepCopyInto(out *PodAffinityTermApplyConfiguration) {
	*out = *in
	in.LabelSelector.DeepCopyInto(&out.LabelSelector)
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TopologyKey != nil {
		in, out := &in.TopologyKey, &out.TopologyKey
		*out = new(string)
		**out = **in
	}
	in.NamespaceSelector.DeepCopyInto(&out.NamespaceSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodAffinityTermApplyConfiguration.
func (in *PodAffinityTermApplyConfiguration) DeepCopy() *PodAffinityTermApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodAffinityTermApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodAntiAffinityApplyConfiguration) DeepCopyInto(out *PodAntiAffinityApplyConfiguration) {
	*out = *in
	if in.RequiredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.RequiredDuringSchedulingIgnoredDuringExecution, &out.RequiredDuringSchedulingIgnoredDuringExecution
		*out = make([]PodAffinityTermApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]WeightedPodAffinityTermApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodAntiAffinityApplyConfiguration.
func (in *PodAntiAffinityApplyConfiguration) DeepCopy() *PodAntiAffinityApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodAntiAffinityApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodApplyConfiguration) DeepCopyInto(out *PodApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(PodSpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(PodStatusApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodApplyConfiguration.
func (in *PodApplyConfiguration) DeepCopy() *PodApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodConditionApplyConfiguration) DeepCopyInto(out *PodConditionApplyConfiguration) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.LastProbeTime != nil {
		in, out := &in.LastProbeTime, &out.LastProbeTime
		*out = (*in).DeepCopy()
	}
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodConditionApplyConfiguration.
func (in *PodConditionApplyConfiguration) DeepCopy() *PodConditionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodConditionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodDNSConfigApplyConfiguration) DeepCopyInto(out *PodDNSConfigApplyConfiguration) {
	*out = *in
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Searches != nil {
		in, out := &in.Searches, &out.Searches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]PodDNSConfigOptionApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodDNSConfigApplyConfiguration.
func (in *PodDNSConfigApplyConfiguration) DeepCopy() *PodDNSConfigApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodDNSConfigApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodDNSConfigOptionApplyConfiguration) DeepCopyInto(out *PodDNSConfigOptionApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodDNSConfigOptionApplyConfiguration.
func (in *PodDNSConfigOptionApplyConfiguration) DeepCopy() *PodDNSConfigOptionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodDNSConfigOptionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodIPApplyConfiguration) DeepCopyInto(out *PodIPApplyConfiguration) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodIPApplyConfiguration.
func (in *PodIPApplyConfiguration) DeepCopy() *PodIPApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodIPApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodOSApplyConfiguration) DeepCopyInto(out *PodOSApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodOSApplyConfiguration.
func (in *PodOSApplyConfiguration) DeepCopy() *PodOSApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodOSApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodReadinessGateApplyConfiguration) DeepCopyInto(out *PodReadinessGateApplyConfiguration) {
	*out = *in
	if in.ConditionType != nil {
		in, out := &in.ConditionType, &out.ConditionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodReadinessGateApplyConfiguration.
func (in *PodReadinessGateApplyConfiguration) DeepCopy() *PodReadinessGateApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodReadinessGateApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodResourceClaimApplyConfiguration) DeepCopyInto(out *PodResourceClaimApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(ClaimSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodResourceClaimApplyConfiguration.
func (in *PodResourceClaimApplyConfiguration) DeepCopy() *PodResourceClaimApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodResourceClaimApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSchedulingGateApplyConfiguration) DeepCopyInto(out *PodSchedulingGateApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSchedulingGateApplyConfiguration.
func (in *PodSchedulingGateApplyConfiguration) DeepCopy() *PodSchedulingGateApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodSchedulingGateApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSecurityContextApplyConfiguration) DeepCopyInto(out *PodSecurityContextApplyConfiguration) {
	*out = *in
	if in.SELinuxOptions != nil {
		in, out := &in.SELinuxOptions, &out.SELinuxOptions
		*out = new(SELinuxOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsOptions != nil {
		in, out := &in.WindowsOptions, &out.WindowsOptions
		*out = new(WindowsSecurityContextOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = new(int64)
		**out = **in
	}
	if in.RunAsGroup != nil {
		in, out := &in.RunAsGroup, &out.RunAsGroup
		*out = new(int64)
		**out = **in
	}
	if in.RunAsNonRoot != nil {
		in, out := &in.RunAsNonRoot, &out.RunAsNonRoot
		*out = new(bool)
		**out = **in
	}
	if in.SupplementalGroups != nil {
		in, out := &in.SupplementalGroups, &out.SupplementalGroups
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.FSGroup != nil {
		in, out := &in.FSGroup, &out.FSGroup
		*out = new(int64)
		**out = **in
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]SysctlApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FSGroupChangePolicy != nil {
		in, out := &in.FSGroupChangePolicy, &out.FSGroupChangePolicy
		*out = new(string)
		**out = **in
	}
	if in.SeccompProfile != nil {
		in, out := &in.SeccompProfile, &out.SeccompProfile
		*out = new(SeccompProfileApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSecurityContextApplyConfiguration.
func (in *PodSecurityContextApplyConfiguration) DeepCopy() *PodSecurityContextApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodSecurityContextApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSpecApplyConfiguration) DeepCopyInto(out *PodSpecApplyConfiguration) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]ContainerApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestartPolicy != nil {
		in, out := &in.RestartPolicy, &out.RestartPolicy
		*out = new(string)
		**out = **in
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.DNSPolicy != nil {
		in, out := &in.DNSPolicy, &out.DNSPolicy
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
	if in.DeprecatedServiceAccount != nil {
		in, out := &in.DeprecatedServiceAccount, &out.DeprecatedServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.AutomountServiceAccountToken != nil {
		in, out := &in.AutomountServiceAccountToken, &out.AutomountServiceAccountToken
		*out = new(bool)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.HostPID != nil {
		in, out := &in.HostPID, &out.HostPID
		*out = new(bool)
		**out = **in
	}
	if in.HostIPC != nil {
		in, out := &in.HostIPC, &out.HostIPC
		*out = new(bool)
		**out = **in
	}
	if in.ShareProcessNamespace != nil {
		in, out := &in.ShareProcessNamespace, &out.ShareProcessNamespace
		*out = new(bool)
		**out = **in
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(PodSecurityContextApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]LocalObjectReferenceApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Subdomain != nil {
		in, out := &in.Subdomain, &out.Subdomain
		*out = new(string)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(AffinityApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SchedulerName != nil {
		in, out := &in.SchedulerName, &out.SchedulerName
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]TolerationApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostAliases != nil {
		in, out := &in.HostAliases, &out.HostAliases
		*out = make([]HostAliasApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
	if in.DNSConfig != nil {
		in, out := &in.DNSConfig, &out.DNSConfig
		*out = new(PodDNSConfigApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]PodReadinessGateApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeClassName != nil {
		in, out := &in.RuntimeClassName, &out.RuntimeClassName
		*out = new(string)
		**out = **in
	}
	if in.EnableServiceLinks != nil {
		in, out := &in.EnableServiceLinks, &out.EnableServiceLinks
		*out = new(bool)
		**out = **in
	}
	if in.PreemptionPolicy != nil {
		in, out := &in.PreemptionPolicy, &out.PreemptionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]TopologySpreadConstraintApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetHostnameAsFQDN != nil {
		in, out := &in.SetHostnameAsFQDN, &out.SetHostnameAsFQDN
		*out = new(bool)
		**out = **in
	}
	if in.OS != nil {
		in, out := &in.OS, &out.OS
		*out = new(PodOSApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.HostUsers != nil {
		in, out := &in.HostUsers, &out.HostUsers
		*out = new(bool)
		**out = **in
	}
	if in.SchedulingGates != nil {
		in, out := &in.SchedulingGates, &out.SchedulingGates
		*out = make([]PodSchedulingGateApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceClaims != nil {
		in, out := &in.ResourceClaims, &out.ResourceClaims
		*out = make([]PodResourceClaimApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSpecApplyConfiguration.
func (in *PodSpecApplyConfiguration) DeepCopy() *PodSpecApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodSpecApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodStatusApplyConfiguration) DeepCopyInto(out *PodStatusApplyConfiguration) {
	*out = *in
	if in.Phase != nil {
		in, out := &in.Phase, &out.Phase
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]PodConditionApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.NominatedNodeName != nil {
		in, out := &in.NominatedNodeName, &out.NominatedNodeName
		*out = new(string)
		**out = **in
	}
	if in.HostIP != nil {
		in, out := &in.HostIP, &out.HostIP
		*out = new(string)
		**out = **in
	}
	if in.PodIP != nil {
		in, out := &in.PodIP, &out.PodIP
		*out = new(string)
		**out = **in
	}
	if in.PodIPs != nil {
		in, out := &in.PodIPs, &out.PodIPs
		*out = make([]PodIPApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.InitContainerStatuses != nil {
		in, out := &in.InitContainerStatuses, &out.InitContainerStatuses
		*out = make([]ContainerStatusApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerStatuses != nil {
		in, out := &in.ContainerStatuses, &out.ContainerStatuses
		*out = make([]ContainerStatusApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QOSClass != nil {
		in, out := &in.QOSClass, &out.QOSClass
		*out = new(string)
		**out = **in
	}
	if in.EphemeralContainerStatuses != nil {
		in, out := &in.EphemeralContainerStatuses, &out.EphemeralContainerStatuses
		*out = make([]ContainerStatusApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resize != nil {
		in, out := &in.Resize, &out.Resize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodStatusApplyConfiguration.
func (in *PodStatusApplyConfiguration) DeepCopy() *PodStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodTemplateApplyConfiguration) DeepCopyInto(out *PodTemplateApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(PodTemplateSpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodTemplateApplyConfiguration.
func (in *PodTemplateApplyConfiguration) DeepCopy() *PodTemplateApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodTemplateApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodTemplateSpecApplyConfiguration) DeepCopyInto(out *PodTemplateSpecApplyConfiguration) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(PodSpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodTemplateSpecApplyConfiguration.
func (in *PodTemplateSpecApplyConfiguration) DeepCopy() *PodTemplateSpecApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodTemplateSpecApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortStatusApplyConfiguration) DeepCopyInto(out *PortStatusApplyConfiguration) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortStatusApplyConfiguration.
func (in *PortStatusApplyConfiguration) DeepCopy() *PortStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PortStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortworxVolumeSourceApplyConfiguration) DeepCopyInto(out *PortworxVolumeSourceApplyConfiguration) {
	*out = *in
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortworxVolumeSourceApplyConfiguration.
func (in *PortworxVolumeSourceApplyConfiguration) DeepCopy() *PortworxVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PortworxVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferredSchedulingTermApplyConfiguration) DeepCopyInto(out *PreferredSchedulingTermApplyConfiguration) {
	*out = *in
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int32)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(NodeSelectorTermApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferredSchedulingTermApplyConfiguration.
func (in *PreferredSchedulingTermApplyConfiguration) DeepCopy() *PreferredSchedulingTermApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PreferredSchedulingTermApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProbeApplyConfiguration) DeepCopyInto(out *ProbeApplyConfiguration) {
	*out = *in
	in.ProbeHandlerApplyConfiguration.DeepCopyInto(&out.ProbeHandlerApplyConfiguration)
	if in.InitialDelaySeconds != nil {
		in, out := &in.InitialDelaySeconds, &out.InitialDelaySeconds
		*out = new(int32)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int32)
		**out = **in
	}
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(int32)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(int32)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(int32)
		**out = **in
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbeApplyConfiguration.
func (in *ProbeApplyConfiguration) DeepCopy() *ProbeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProbeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProbeHandlerApplyConfiguration) DeepCopyInto(out *ProbeHandlerApplyConfiguration) {
	*out = *in
	if in.Exec != nil {
		in, out := &in.Exec, &out.Exec
		*out = new(ExecActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPGet != nil {
		in, out := &in.HTTPGet, &out.HTTPGet
		*out = new(HTTPGetActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.TCPSocket != nil {
		in, out := &in.TCPSocket, &out.TCPSocket
		*out = new(TCPSocketActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.GRPC != nil {
		in, out := &in.GRPC, &out.GRPC
		*out = new(GRPCActionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbeHandlerApplyConfiguration.
func (in *ProbeHandlerApplyConfiguration) DeepCopy() *ProbeHandlerApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProbeHandlerApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectedVolumeSourceApplyConfiguration) DeepCopyInto(out *ProjectedVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]VolumeProjectionApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultMode != nil {
		in, out := &in.DefaultMode, &out.DefaultMode
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectedVolumeSourceApplyConfiguration.
func (in *ProjectedVolumeSourceApplyConfiguration) DeepCopy() *ProjectedVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProjectedVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuobyteVolumeSourceApplyConfiguration) DeepCopyInto(out *QuobyteVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Tenant != nil {
		in, out := &in.Tenant, &out.Tenant
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuobyteVolumeSourceApplyConfiguration.
func (in *QuobyteVolumeSourceApplyConfiguration) DeepCopy() *QuobyteVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(QuobyteVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RBDPersistentVolumeSourceApplyConfiguration) DeepCopyInto(out *RBDPersistentVolumeSourceApplyConfiguration) {
	*out = *in
	if in.CephMonitors != nil {
		in, out := &in.CephMonitors, &out.CephMonitors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RBDImage != nil {
		in, out := &in.RBDImage, &out.RBDImage
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.RBDPool != nil {
		in, out := &in.RBDPool, &out.RBDPool
		*out = new(string)
		**out = **in
	}
	if in.RadosUser != nil {
		in, out := &in.RadosUser, &out.RadosUser
		*out = new(string)
		**out = **in
	}
	if in.Keyring != nil {
		in, out := &in.Keyring, &out.Keyring
		*out = new(string)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(SecretReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RBDPersistentVolumeSourceApplyConfiguration.
func (in *RBDPersistentVolumeSourceApplyConfiguration) DeepCopy() *RBDPersistentVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(RBDPersistentVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RBDVolumeSourceApplyConfiguration) DeepCopyInto(out *RBDVolumeSourceApplyConfiguration) {
	*out = *in
	if in.CephMonitors != nil {
		in, out := &in.CephMonitors, &out.CephMonitors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RBDImage != nil {
		in, out := &in.RBDImage, &out.RBDImage
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.RBDPool != nil {
		in, out := &in.RBDPool, &out.RBDPool
		*out = new(string)
		**out = **in
	}
	if in.RadosUser != nil {
		in, out := &in.RadosUser, &out.RadosUser
		*out = new(string)
		**out = **in
	}
	if in.Keyring != nil {
		in, out := &in.Keyring, &out.Keyring
		*out = new(string)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RBDVolumeSourceApplyConfiguration.
func (in *RBDVolumeSourceApplyConfiguration) DeepCopy() *RBDVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(RBDVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationControllerConditionApplyConfiguration) DeepCopyInto(out *ReplicationControllerConditionApplyConfiguration) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationControllerConditionApplyConfiguration.
func (in *ReplicationControllerConditionApplyConfiguration) DeepCopy() *ReplicationControllerConditionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ReplicationControllerConditionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceClaimApplyConfiguration) DeepCopyInto(out *ResourceClaimApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceClaimApplyConfiguration.
func (in *ResourceClaimApplyConfiguration) DeepCopy() *ResourceClaimApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ResourceClaimApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceFieldSelectorApplyConfiguration) DeepCopyInto(out *ResourceFieldSelectorApplyConfiguration) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Divisor != nil {
		in, out := &in.Divisor, &out.Divisor
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceFieldSelectorApplyConfiguration.
func (in *ResourceFieldSelectorApplyConfiguration) DeepCopy() *ResourceFieldSelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ResourceFieldSelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceQuotaStatusApplyConfiguration) DeepCopyInto(out *ResourceQuotaStatusApplyConfiguration) {
	*out = *in
	if in.Hard != nil {
		in, out := &in.Hard, &out.Hard
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
	if in.Used != nil {
		in, out := &in.Used, &out.Used
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceQuotaStatusApplyConfiguration.
func (in *ResourceQuotaStatusApplyConfiguration) DeepCopy() *ResourceQuotaStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ResourceQuotaStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRequirementsApplyConfiguration) DeepCopyInto(out *ResourceRequirementsApplyConfiguration) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(map[string]resource.Quantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]resource.Quantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val.DeepCopy()
			}
		}
	}
	if in.Claims != nil {
		in, out := &in.Claims, &out.Claims
		*out = make([]ResourceClaimApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRequirementsApplyConfiguration.
func (in *ResourceRequirementsApplyConfiguration) DeepCopy() *ResourceRequirementsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ResourceRequirementsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SELinuxOptionsApplyConfiguration) DeepCopyInto(out *SELinuxOptionsApplyConfiguration) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SELinuxOptionsApplyConfiguration.
func (in *SELinuxOptionsApplyConfiguration) DeepCopy() *SELinuxOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SELinuxOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleIOVolumeSourceApplyConfiguration) DeepCopyInto(out *ScaleIOVolumeSourceApplyConfiguration) {
	*out = *in
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(string)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLEnabled != nil {
		in, out := &in.SSLEnabled, &out.SSLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProtectionDomain != nil {
		in, out := &in.ProtectionDomain, &out.ProtectionDomain
		*out = new(string)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.StorageMode != nil {
		in, out := &in.StorageMode, &out.StorageMode
		*out = new(string)
		**out = **in
	}
	if in.VolumeName != nil {
		in, out := &in.VolumeName, &out.VolumeName
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleIOVolumeSourceApplyConfiguration.
func (in *ScaleIOVolumeSourceApplyConfiguration) DeepCopy() *ScaleIOVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ScaleIOVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeSelectorApplyConfiguration) DeepCopyInto(out *ScopeSelectorApplyConfiguration) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]ScopedResourceSelectorRequirementApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeSelectorApplyConfiguration.
func (in *ScopeSelectorApplyConfiguration) DeepCopy() *ScopeSelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ScopeSelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedResourceSelectorRequirementApplyConfiguration) DeepCopyInto(out *ScopedResourceSelectorRequirementApplyConfiguration) {
	*out = *in
	if in.ScopeName != nil {
		in, out := &in.ScopeName, &out.ScopeName
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedResourceSelectorRequirementApplyConfiguration.
func (in *ScopedResourceSelectorRequirementApplyConfiguration) DeepCopy() *ScopedResourceSelectorRequirementApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ScopedResourceSelectorRequirementApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeccompProfileApplyConfiguration) DeepCopyInto(out *SeccompProfileApplyConfiguration) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.LocalhostProfile != nil {
		in, out := &in.LocalhostProfile, &out.LocalhostProfile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeccompProfileApplyConfiguration.
func (in *SeccompProfileApplyConfiguration) DeepCopy() *SeccompProfileApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SeccompProfileApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretApplyConfiguration) DeepCopyInto(out *SecretApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string][]byte, len(*in))
		for key, val := range *in {
			var outVal []byte
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]byte, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.StringData != nil {
		in, out := &in.StringData, &out.StringData
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretApplyConfiguration.
func (in *SecretApplyConfiguration) DeepCopy() *SecretApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecretApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretEnvSourceApplyConfiguration) DeepCopyInto(out *SecretEnvSourceApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretEnvSourceApplyConfiguration.
func (in *SecretEnvSourceApplyConfiguration) DeepCopy() *SecretEnvSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecretEnvSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretKeySelectorApplyConfiguration) DeepCopyInto(out *SecretKeySelectorApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretKeySelectorApplyConfiguration.
func (in *SecretKeySelectorApplyConfiguration) DeepCopy() *SecretKeySelectorApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecretKeySelectorApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretProjectionApplyConfiguration) DeepCopyInto(out *SecretProjectionApplyConfiguration) {
	*out = *in
	in.LocalObjectReferenceApplyConfiguration.DeepCopyInto(&out.LocalObjectReferenceApplyConfiguration)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeyToPathApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretProjectionApplyConfiguration.
func (in *SecretProjectionApplyConfiguration) DeepCopy() *SecretProjectionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecretProjectionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretReferenceApplyConfiguration) DeepCopyInto(out *SecretReferenceApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretReferenceApplyConfiguration.
func (in *SecretReferenceApplyConfiguration) DeepCopy() *SecretReferenceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecretReferenceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretVolumeSourceApplyConfiguration) DeepCopyInto(out *SecretVolumeSourceApplyConfiguration) {
	*out = *in
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeyToPathApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultMode != nil {
		in, out := &in.DefaultMode, &out.DefaultMode
		*out = new(int32)
		**out = **in
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretVolumeSourceApplyConfiguration.
func (in *SecretVolumeSourceApplyConfiguration) DeepCopy() *SecretVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecretVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityContextApplyConfiguration) DeepCopyInto(out *SecurityContextApplyConfiguration) {
	*out = *in
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = new(CapabilitiesApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.SELinuxOptions != nil {
		in, out := &in.SELinuxOptions, &out.SELinuxOptions
		*out = new(SELinuxOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsOptions != nil {
		in, out := &in.WindowsOptions, &out.WindowsOptions
		*out = new(WindowsSecurityContextOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = new(int64)
		**out = **in
	}
	if in.RunAsGroup != nil {
		in, out := &in.RunAsGroup, &out.RunAsGroup
		*out = new(int64)
		**out = **in
	}
	if in.RunAsNonRoot != nil {
		in, out := &in.RunAsNonRoot, &out.RunAsNonRoot
		*out = new(bool)
		**out = **in
	}
	if in.ReadOnlyRootFilesystem != nil {
		in, out := &in.ReadOnlyRootFilesystem, &out.ReadOnlyRootFilesystem
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrivilegeEscalation != nil {
		in, out := &in.AllowPrivilegeEscalation, &out.AllowPrivilegeEscalation
		*out = new(bool)
		**out = **in
	}
	if in.ProcMount != nil {
		in, out := &in.ProcMount, &out.ProcMount
		*out = new(string)
		**out = **in
	}
	if in.SeccompProfile != nil {
		in, out := &in.SeccompProfile, &out.SeccompProfile
		*out = new(SeccompProfileApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityContextApplyConfiguration.
func (in *SecurityContextApplyConfiguration) DeepCopy() *SecurityContextApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecurityContextApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountApplyConfiguration) DeepCopyInto(out *ServiceAccountApplyConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]ObjectReferenceApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]LocalObjectReferenceApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutomountServiceAccountToken != nil {
		in, out := &in.AutomountServiceAccountToken, &out.AutomountServiceAccountToken
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountApplyConfiguration.
func (in *ServiceAccountApplyConfiguration) DeepCopy() *ServiceAccountApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenProjectionApplyConfiguration) DeepCopyInto(out *ServiceAccountTokenProjectionApplyConfiguration) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ExpirationSeconds != nil {
		in, out := &in.ExpirationSeconds, &out.ExpirationSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenProjectionApplyConfiguration.
func (in *ServiceAccountTokenProjectionApplyConfiguration) DeepCopy() *ServiceAccountTokenProjectionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenProjectionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityConfigApplyConfiguration) DeepCopyInto(out *SessionAffinityConfigApplyConfiguration) {
	*out = *in
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = new(ClientIPConfigApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityConfigApplyConfiguration.
func (in *SessionAffinityConfigApplyConfiguration) DeepCopy() *SessionAffinityConfigApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityConfigApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcEventInterface) DeepCopyInto(out *SrcEventInterface) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcEventInterface.
func (in *SrcEventInterface) DeepCopy() *SrcEventInterface {
	if in == nil {
		return nil
	}
	out := new(SrcEventInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageOSPersistentVolumeSourceApplyConfiguration) DeepCopyInto(out *StorageOSPersistentVolumeSourceApplyConfiguration) {
	*out = *in
	if in.VolumeName != nil {
		in, out := &in.VolumeName, &out.VolumeName
		*out = new(string)
		**out = **in
	}
	if in.VolumeNamespace != nil {
		in, out := &in.VolumeNamespace, &out.VolumeNamespace
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(ObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageOSPersistentVolumeSourceApplyConfiguration.
func (in *StorageOSPersistentVolumeSourceApplyConfiguration) DeepCopy() *StorageOSPersistentVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(StorageOSPersistentVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageOSVolumeSourceApplyConfiguration) DeepCopyInto(out *StorageOSVolumeSourceApplyConfiguration) {
	*out = *in
	if in.VolumeName != nil {
		in, out := &in.VolumeName, &out.VolumeName
		*out = new(string)
		**out = **in
	}
	if in.VolumeNamespace != nil {
		in, out := &in.VolumeNamespace, &out.VolumeNamespace
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LocalObjectReferenceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageOSVolumeSourceApplyConfiguration.
func (in *StorageOSVolumeSourceApplyConfiguration) DeepCopy() *StorageOSVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(StorageOSVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlApplyConfiguration) DeepCopyInto(out *SysctlApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlApplyConfiguration.
func (in *SysctlApplyConfiguration) DeepCopy() *SysctlApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SysctlApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPSocketActionApplyConfiguration) DeepCopyInto(out *TCPSocketActionApplyConfiguration) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPSocketActionApplyConfiguration.
func (in *TCPSocketActionApplyConfiguration) DeepCopy() *TCPSocketActionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TCPSocketActionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintApplyConfiguration) DeepCopyInto(out *TaintApplyConfiguration) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.TimeAdded != nil {
		in, out := &in.TimeAdded, &out.TimeAdded
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintApplyConfiguration.
func (in *TaintApplyConfiguration) DeepCopy() *TaintApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TaintApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Task) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskList) DeepCopyInto(out *TaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Task, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskList.
func (in *TaskList) DeepCopy() *TaskList {
	if in == nil {
		return nil
	}
	out := new(TaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRefSpec) DeepCopyInto(out *TaskRefSpec) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]TasksEventInterface, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRefSpec.
func (in *TaskRefSpec) DeepCopy() *TaskRefSpec {
	if in == nil {
		return nil
	}
	out := new(TaskRefSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSpec) DeepCopyInto(out *TaskSpec) {
	*out = *in
	in.Template.DeepCopyInto(&out.Template)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSpec.
func (in *TaskSpec) DeepCopy() *TaskSpec {
	if in == nil {
		return nil
	}
	out := new(TaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskStatus) DeepCopyInto(out *TaskStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskStatus.
func (in *TaskStatus) DeepCopy() *TaskStatus {
	if in == nil {
		return nil
	}
	out := new(TaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksEventInterface) DeepCopyInto(out *TasksEventInterface) {
	*out = *in
	out.Src = in.Src
	out.Dst = in.Dst
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksEventInterface.
func (in *TasksEventInterface) DeepCopy() *TasksEventInterface {
	if in == nil {
		return nil
	}
	out := new(TasksEventInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TolerationApplyConfiguration) DeepCopyInto(out *TolerationApplyConfiguration) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.TolerationSeconds != nil {
		in, out := &in.TolerationSeconds, &out.TolerationSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TolerationApplyConfiguration.
func (in *TolerationApplyConfiguration) DeepCopy() *TolerationApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TolerationApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologySelectorLabelRequirementApplyConfiguration) DeepCopyInto(out *TopologySelectorLabelRequirementApplyConfiguration) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologySelectorLabelRequirementApplyConfiguration.
func (in *TopologySelectorLabelRequirementApplyConfiguration) DeepCopy() *TopologySelectorLabelRequirementApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TopologySelectorLabelRequirementApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologySelectorTermApplyConfiguration) DeepCopyInto(out *TopologySelectorTermApplyConfiguration) {
	*out = *in
	if in.MatchLabelExpressions != nil {
		in, out := &in.MatchLabelExpressions, &out.MatchLabelExpressions
		*out = make([]TopologySelectorLabelRequirementApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologySelectorTermApplyConfiguration.
func (in *TopologySelectorTermApplyConfiguration) DeepCopy() *TopologySelectorTermApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TopologySelectorTermApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologySpreadConstraintApplyConfiguration) DeepCopyInto(out *TopologySpreadConstraintApplyConfiguration) {
	*out = *in
	if in.MaxSkew != nil {
		in, out := &in.MaxSkew, &out.MaxSkew
		*out = new(int32)
		**out = **in
	}
	if in.TopologyKey != nil {
		in, out := &in.TopologyKey, &out.TopologyKey
		*out = new(string)
		**out = **in
	}
	if in.WhenUnsatisfiable != nil {
		in, out := &in.WhenUnsatisfiable, &out.WhenUnsatisfiable
		*out = new(string)
		**out = **in
	}
	in.LabelSelector.DeepCopyInto(&out.LabelSelector)
	if in.MinDomains != nil {
		in, out := &in.MinDomains, &out.MinDomains
		*out = new(int32)
		**out = **in
	}
	if in.NodeAffinityPolicy != nil {
		in, out := &in.NodeAffinityPolicy, &out.NodeAffinityPolicy
		*out = new(string)
		**out = **in
	}
	if in.NodeTaintsPolicy != nil {
		in, out := &in.NodeTaintsPolicy, &out.NodeTaintsPolicy
		*out = new(string)
		**out = **in
	}
	if in.MatchLabelKeys != nil {
		in, out := &in.MatchLabelKeys, &out.MatchLabelKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologySpreadConstraintApplyConfiguration.
func (in *TopologySpreadConstraintApplyConfiguration) DeepCopy() *TopologySpreadConstraintApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TopologySpreadConstraintApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypedLocalObjectReferenceApplyConfiguration) DeepCopyInto(out *TypedLocalObjectReferenceApplyConfiguration) {
	*out = *in
	if in.APIGroup != nil {
		in, out := &in.APIGroup, &out.APIGroup
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypedLocalObjectReferenceApplyConfiguration.
func (in *TypedLocalObjectReferenceApplyConfiguration) DeepCopy() *TypedLocalObjectReferenceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TypedLocalObjectReferenceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypedObjectReferenceApplyConfiguration) DeepCopyInto(out *TypedObjectReferenceApplyConfiguration) {
	*out = *in
	if in.APIGroup != nil {
		in, out := &in.APIGroup, &out.APIGroup
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypedObjectReferenceApplyConfiguration.
func (in *TypedObjectReferenceApplyConfiguration) DeepCopy() *TypedObjectReferenceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(TypedObjectReferenceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeApplyConfiguration) DeepCopyInto(out *VolumeApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	in.VolumeSourceApplyConfiguration.DeepCopyInto(&out.VolumeSourceApplyConfiguration)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeApplyConfiguration.
func (in *VolumeApplyConfiguration) DeepCopy() *VolumeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VolumeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeDeviceApplyConfiguration) DeepCopyInto(out *VolumeDeviceApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DevicePath != nil {
		in, out := &in.DevicePath, &out.DevicePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeDeviceApplyConfiguration.
func (in *VolumeDeviceApplyConfiguration) DeepCopy() *VolumeDeviceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VolumeDeviceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeMountApplyConfiguration) DeepCopyInto(out *VolumeMountApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.SubPath != nil {
		in, out := &in.SubPath, &out.SubPath
		*out = new(string)
		**out = **in
	}
	if in.MountPropagation != nil {
		in, out := &in.MountPropagation, &out.MountPropagation
		*out = new(string)
		**out = **in
	}
	if in.SubPathExpr != nil {
		in, out := &in.SubPathExpr, &out.SubPathExpr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeMountApplyConfiguration.
func (in *VolumeMountApplyConfiguration) DeepCopy() *VolumeMountApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VolumeMountApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeNodeAffinityApplyConfiguration) DeepCopyInto(out *VolumeNodeAffinityApplyConfiguration) {
	*out = *in
	in.Required.DeepCopyInto(&out.Required)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeNodeAffinityApplyConfiguration.
func (in *VolumeNodeAffinityApplyConfiguration) DeepCopy() *VolumeNodeAffinityApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VolumeNodeAffinityApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeProjectionApplyConfiguration) DeepCopyInto(out *VolumeProjectionApplyConfiguration) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(SecretProjectionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DownwardAPI != nil {
		in, out := &in.DownwardAPI, &out.DownwardAPI
		*out = new(DownwardAPIProjectionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(ConfigMapProjectionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountToken != nil {
		in, out := &in.ServiceAccountToken, &out.ServiceAccountToken
		*out = new(ServiceAccountTokenProjectionApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeProjectionApplyConfiguration.
func (in *VolumeProjectionApplyConfiguration) DeepCopy() *VolumeProjectionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VolumeProjectionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceApplyConfiguration) DeepCopyInto(out *VolumeSourceApplyConfiguration) {
	*out = *in
	if in.EmptyDir != nil {
		in, out := &in.EmptyDir, &out.EmptyDir
		*out = new(EmptyDirVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(SecretVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NFS != nil {
		in, out := &in.NFS, &out.NFS
		*out = new(NFSVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ISCSI != nil {
		in, out := &in.ISCSI, &out.ISCSI
		*out = new(ISCSIVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(PersistentVolumeClaimVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DownwardAPI != nil {
		in, out := &in.DownwardAPI, &out.DownwardAPI
		*out = new(DownwardAPIVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(ConfigMapVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Projected != nil {
		in, out := &in.Projected, &out.Projected
		*out = new(ProjectedVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageOS != nil {
		in, out := &in.StorageOS, &out.StorageOS
		*out = new(StorageOSVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.CSI != nil {
		in, out := &in.CSI, &out.CSI
		*out = new(CSIVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Ephemeral != nil {
		in, out := &in.Ephemeral, &out.Ephemeral
		*out = new(EphemeralVolumeSourceApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceApplyConfiguration.
func (in *VolumeSourceApplyConfiguration) DeepCopy() *VolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereVirtualDiskVolumeSourceApplyConfiguration) DeepCopyInto(out *VsphereVirtualDiskVolumeSourceApplyConfiguration) {
	*out = *in
	if in.VolumePath != nil {
		in, out := &in.VolumePath, &out.VolumePath
		*out = new(string)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.StoragePolicyName != nil {
		in, out := &in.StoragePolicyName, &out.StoragePolicyName
		*out = new(string)
		**out = **in
	}
	if in.StoragePolicyID != nil {
		in, out := &in.StoragePolicyID, &out.StoragePolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereVirtualDiskVolumeSourceApplyConfiguration.
func (in *VsphereVirtualDiskVolumeSourceApplyConfiguration) DeepCopy() *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(VsphereVirtualDiskVolumeSourceApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedPodAffinityTermApplyConfiguration) DeepCopyInto(out *WeightedPodAffinityTermApplyConfiguration) {
	*out = *in
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int32)
		**out = **in
	}
	if in.PodAffinityTerm != nil {
		in, out := &in.PodAffinityTerm, &out.PodAffinityTerm
		*out = new(PodAffinityTermApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedPodAffinityTermApplyConfiguration.
func (in *WeightedPodAffinityTermApplyConfiguration) DeepCopy() *WeightedPodAffinityTermApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(WeightedPodAffinityTermApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsSecurityContextOptionsApplyConfiguration) DeepCopyInto(out *WindowsSecurityContextOptionsApplyConfiguration) {
	*out = *in
	if in.GMSACredentialSpecName != nil {
		in, out := &in.GMSACredentialSpecName, &out.GMSACredentialSpecName
		*out = new(string)
		**out = **in
	}
	if in.GMSACredentialSpec != nil {
		in, out := &in.GMSACredentialSpec, &out.GMSACredentialSpec
		*out = new(string)
		**out = **in
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.HostProcess != nil {
		in, out := &in.HostProcess, &out.HostProcess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsSecurityContextOptionsApplyConfiguration.
func (in *WindowsSecurityContextOptionsApplyConfiguration) DeepCopy() *WindowsSecurityContextOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(WindowsSecurityContextOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec) DeepCopyInto(out *WorkflowSpec) {
	*out = *in
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TaskRefSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec.
func (in *WorkflowSpec) DeepCopy() *WorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStatus) DeepCopyInto(out *WorkflowStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStatus.
func (in *WorkflowStatus) DeepCopy() *WorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowStatus)
	in.DeepCopyInto(out)
	return out
}
